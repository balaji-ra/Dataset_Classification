# -*- coding: utf-8 -*-
"""iris flower lgm internship

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iQYF3NhZoo8P-D-HvGqagnAFzPD0re4n

IRIS FLOWER CLASSIFICATION USING ML
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

"""## Importing dataset of iris pattren"""

iris=pd.read_csv('../content/Iris.data',names=['SepalLength', 'SepalWidth', 'PetalLength', 'PetalWidth', 'Species'])
iris

iris.describe()

iris.isnull().sum()

"""## there is nol null value in the set .so we wre proceeding with the visualization part

## Visualization of iris pattern
"""

import seaborn as sns
sns.set()

iris['Species'].unique()

plt.title('Sepal area plot')
sns.scatterplot('SepalLength','SepalWidth',data=iris,hue='Species',palette='deep')
plt.legend(loc='upper right')
plt.show()

plt.title('petal area plot')
sns.scatterplot('PetalLength','PetalWidth',data=iris, hue='Species',palette='deep')
plt.legend(loc='upper left')
plt.show()

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline

plt.figure(figsize=(25,15))

plt.subplot(2,2,1)
plt.plot('SepalLengthCm')
plt.title('SepallenghtCm Interval and Counts')
          

plt.subplot(2,2,2)
plt.plot('SepalWidthCm')
plt.title('SepalWidthCm Interval and Counts')


plt.subplot(2,2,3)
plt.plot('PetalLengthCm')
plt.title('PetalLengthCm Interval and Counts')

plt.subplot(2,2,4)
plt.plot('PetalWidthCm')
plt.title('PetalWidthCm Interval and Count')

"""## Correlation featues in order"""

iris_corr=iris.copy()
iris_corr=iris_corr.drop(['Species'],axis=1)
corr=iris_corr.corr()

sns.heatmap(corr,cmap='Pastel1_r')
plt.show()

"""## PIE CHART about visualization"""

plt.figure(1, figsize=(5,5))
plt.title("Distribution of Species")
iris['Species'].value_counts().plot.pie(autopct="%1f%%")

"""## Data preprocessing"""

from sklearn.model_selection import train_test_split

x=iris.drop("Species",axis=1)
y=iris["Species"]

X_train,X_test, y_train,y_test=train_test_split(x,y,test_size=0.5)

from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=1)

knn.fit(X_train, y_train)

new = np.array([[6.2,3.4,5.4,2.3]])
prediction = knn.predict(new)
print(prediction)

